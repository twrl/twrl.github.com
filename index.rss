<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
	<channel>
		<title>twrl</title>
		<description>Writing about technology, food, LGB topics, and whatever else comes to mind</description>
		<link>http://twrl.github.com</link>
		
			<item>
				<title>Eyes, Teeth, and Angry Postcards</title>
				<description>&lt;p&gt;Less than a year ago, I published an &lt;a href=&quot;/2012/03/open-letter-to-britains-catholics/&quot;&gt;open letter&lt;/a&gt;
in response to certain of the Roman Catholic Church&amp;rsquo;s statements in the 
earliest days of the current same-sex marriage proposals.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s been a very busy ten months since. I don&amp;rsquo;t think a week has gone by when I
haven&amp;rsquo;t read some misleading and outdated idea, or even outright fabrication, by
one group or another on how same-sex marriage will ruin society and why 
same-sex couples don&amp;rsquo;t deserve to be able to marry. The level of sheer 
unadulterated hatred that has been sloshing around the place has been trumped 
only by the depth of ignorance displayed by certain public figures.&lt;/p&gt;

&lt;p&gt;Around the same time as that letter, I also said I was becoming fed up with the
debate. Well, I wasn&amp;rsquo;t. I&amp;rsquo;ve talked until my voice is hoarse, I&amp;rsquo;ve written until
my fingers ached, I&amp;rsquo;ve read and engaged and done my level best to display the
patience and tolerance the other side frequently won&amp;rsquo;t stoop to show me. And now
I&amp;rsquo;m tired. &lt;/p&gt;

&lt;p&gt;You see, the opposing lobby have won a sort of phyrric victory when it comes to
me, and many other people I know who share my mixture of ideological liberalism
and cynical pragmatism: they&amp;rsquo;ve managed to shake my belief in the univerasality
of rights. Not uproot it, my principles remain unchanged, but how I interpret
and apply those principles has been getting some serious re-evaluation of late.&lt;/p&gt;

&lt;p&gt;To summarise very briefly my ethical position, I believe that all people have a
right to continuity of life and integrity of self - by which I mean both that 
the individual should be protected against mental and physical harm, and that 
ones economic and social presence should not be unduly restrained or interfered
with either. I also believe that denying somebody some right is one manner of
doing them harm, and is therefore only justifiable if it prevents more harm than
it causes.&lt;/p&gt;

&lt;p&gt;On this basis I have spent the last ten months arguing that same-sex couple must
be given the right to marry, because it is harmful to those couples who want or
need to do so that they can&amp;rsquo;t and there is no reason to deny it to them; and 
simultaniously that no religious group should be forced or forbidden to conduct
such ceremonies, because denying them control of their own rites does harm to
them for insufficient reason too.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve argued this in the full knowledge that I&amp;rsquo;m at least in part arguing for the
very same people who so viciously oppose me. But my supplies of civility have 
now been exhausted. So I wasn&amp;rsquo;t best pleased to discover that on Sunday 
&lt;a href=&quot;http://www.pinknews.co.uk/2013/01/28/uk-catholics-hand-out-1-million-anti-gay-marriage-postcards/&quot;&gt;a million postcards had been handed out in mass&lt;/a&gt;
as part of a last-ditch effort against the bill, nor that the Church of England
is claiming that &lt;a href=&quot;http://www.pinknews.co.uk/2013/01/28/church-of-england-the-government-has-no-mandate-for-its-same-sex-marriage-bill/&quot;&gt;the government has no mandate&lt;/a&gt;, 
nor was I glad to see a number of other increasingly desperate signs from the 
anti-equality lobby. But if all they had been were the signs of an argument
near-lost I would have rolled my eyes and carried on. They&amp;rsquo;re not, this is a 
surge of energy, but relatively innocuous in terms of tactics. A few months ago
a couple of newlyweds delivered an anti-marriage equality petition to Downing
Street dressed in their wedding gear, which was a particularly vicious snub.&lt;/p&gt;

&lt;p&gt;Last week, the &lt;a href=&quot;http://services.parliament.uk/bills/2012-13/marriagesamesexcouplesbill.html&quot;&gt;Marriage (Same-sex Couples) Bill&lt;/a&gt;
had it&amp;rsquo;s first reading in the House of Commons. Having cynically predicted that 
it would take a lot longer to get to this stage in order for the government to
extract the maximum amount of capital from the issue, I&amp;rsquo;ve seldom been more
happy to be wrong. The second reading is scheduled for the 5th of February. It&amp;rsquo;s
expected to pass the Commons easily enough, but the battle in the Lords will be
long and bloody and could go either way. The argument is not over yet.&lt;/p&gt;

&lt;p&gt;By no means all, but most of this vitriol originates from religious groups. I
can no longer consider them irritating quirks, I find myself increasingly
seeing them as a direct and continuing cause of systematic harm. The level of 
restraint we apply no longer seems to provide the right balance between their
freedoms and everybody else&amp;rsquo;s wellbeing. Should not the additional protections
we afford religious groups be balanced by their absolute neturality on secular
matters? Is maintaining an established church still in the national interest?&lt;/p&gt;

&lt;p&gt;These issues are not new, but for me at least they have now become pressing. The
role that organised religion plays in our society has become so divorced from
offering any good to the public, that all we see is a bunch of particularly
ineffective politicians in period costume. I&amp;rsquo;m on the fence about the continued
merit of Parliament, I certainly can&amp;rsquo;t tolerate people telling us all how to 
live whose authority might as well come from Paddington Bear.&lt;/p&gt;

&lt;p&gt;So once this present argument is over, secularism is where I must turn my mind.
It&amp;rsquo;s past time to disestablish the Church of England, it&amp;rsquo;s certainly past time
to enforce charity law on those groups that benefit from it. It&amp;rsquo;s past time we
enforced the libel laws, for that matter. Rather than simmering away in the 
background, the role of religion is something that society needs to consider 
more fully. And I for one can no longer see any merit in it.&lt;/p&gt;
</description>
				<published>2013-01-29 00:00:00 +0000</published>
				<link>http://twrl.github.com/2013/01/eyes-teeth-and-angry-postcards/</link>
			</item>
		
			<item>
				<title>The Passage of Time</title>
				<description>&lt;p&gt;Well, it&amp;rsquo;s been a rather fraught few months, to put it mildly. Lots has happened
in the world - not to mention in my life - and although I&amp;rsquo;ve accumulated a lot
of skeletons of posts since October, I&amp;rsquo;ve published none.&lt;/p&gt;

&lt;p&gt;So, here&amp;rsquo;s the highlights&amp;hellip;&lt;/p&gt;

&lt;h2 id=&quot;october&quot;&gt;October&lt;/h2&gt;

&lt;p&gt;Term started again in October, and we had the now-notorious 
&lt;a href=&quot;http://www.huffingtonpost.co.uk/2012/10/04/reading-university-atheist-society-thrown-out-blasphemous-mohammed-pineapple_n_1939317.html&quot;&gt;Pineapple Incident&lt;/a&gt;. 
I&amp;rsquo;m in the Reading University Atheist society, although I wasn&amp;rsquo;t there for this 
and wasn&amp;rsquo;t directly involved. looking at some of the discussion afterwards 
however, I think two things became pretty clear: most of RAHS really did not
(and still don&amp;rsquo;t) understand what the original problem was, myself included; and
RUSU couldn&amp;rsquo;t have handled the incident or it&amp;rsquo;s aftermath worse if they&amp;rsquo;d tried,
rather than deal with it constructively and move on they&amp;rsquo;ve opened this huge can
of proverbial worms about democracy, transparency, and free expression. I may 
yet recycle the stuff I&amp;rsquo;d started writing about the balance between prohibiting 
hate speech (which is harmful), and permitting critical speech (which may 
sometimes be offensive, but is not harmful).&lt;/p&gt;

&lt;p&gt;Otherwise, in terms of things to talk about, October was a pretty quiet month. 
there was the usual start-of-the-academic-year celebrating, and and whole great 
swathes of new mathematics to learn, but nothing terribly noteworthy.&lt;/p&gt;

&lt;h2 id=&quot;november&quot;&gt;November&lt;/h2&gt;

&lt;p&gt;November started abysmally, with me and the boyfriend parting company. After a 
few days of staying in my room, listening to excessively loud music and living 
on vodka and granola bars I did start to pull myself together and carry on with
life. &lt;/p&gt;

&lt;p&gt;Only to fall ill a couple of weeks later. A trip to the hospital, a dozen trips
to the GP, and and more vacutainers of blood than I can possibly count later, 
the solution turns out to be to wait it out (with the help of a lot of tramadol)
and then do all sorts of lifestyle improving stuff to stop it happening again.&lt;/p&gt;

&lt;p&gt;So, between wallowing in self-pity and wallowing in a pain-and-opiate mediated 
stupor, I missed most of November.&lt;/p&gt;

&lt;h2 id=&quot;december&quot;&gt;December&lt;/h2&gt;

&lt;p&gt;December started as November had finished: blurrily. I did manage to get on to
campus - attend a few lectures, meetings, and so on - but too often putting in a
few hours would leave me crippled for the following few days. &lt;/p&gt;

&lt;p&gt;Mid-month, we had the government&amp;rsquo;s latest interation of it&amp;rsquo;s proposals for 
same-sex marriage. The Church of England had a hissy fit because they were 
outwitted on the issue, and the Pope decided to use World Peace Day to 
(re-)declare war.&lt;/p&gt;

&lt;p&gt;Term ended, I went to stay with my parents over the vacation, and subsequently
endured the eternal chaotic grind of my family at Christmas. We&amp;rsquo;re all still 
speaking, so it can&amp;rsquo;t be that bad really.&lt;/p&gt;
</description>
				<published>2013-01-11 00:00:00 +0000</published>
				<link>http://twrl.github.com/2013/01/the-passage-of-time/</link>
			</item>
		
			<item>
				<title>The FSF have my goat!</title>
				<description>&lt;p&gt;I&amp;rsquo;ve never made a secret of my mixed feelings about the FSF and what they do. &lt;/p&gt;

&lt;p&gt;For anyone who isn&amp;rsquo;t aware, the UEFI forum have devised a standard called
Secure Boot. Secure Boot requires the firmware to cryptographically verify
operating system images at load time, using public keys stored in NVRAM. The
standard doesn&amp;rsquo;t require it explicitly, but in practice this means using the 
secure keystore and trusted boot path functions of a Trusted Platform Module.&lt;/p&gt;

&lt;p&gt;Microsoft have stated that for hardware manufacturers to recieve Windows 8 logo
certification they must meet certain requirements regarding Secure Boot. Amongst
other things Secure Boot must be fully implemented the user must be able to 
disable Secure Boot on x86 and x86-64 based systems. Meaning that as well as the
UEFI mandated software API for disabling and overriding the behaviour of Secure
Boot, Microsoft have mandated that there must be a user interface. &lt;/p&gt;

&lt;p&gt;The computer, and the vast majority of the world&amp;rsquo;s computers are sold 
preinstalled with Microsoft Windows, must be able to verify that the core of the
operating system is untampered with at boot-time. And the user must be able to
disable this function. These requirements seem thoroughly reasonable, and 
address the spectre of UEFI and Hypervisor malwares.&lt;/p&gt;

&lt;p&gt;So why does the front page of the &lt;a href=&quot;http://www.fsf.org&quot;&gt;FSF website&lt;/a&gt; look like
this:&lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;width: 100%&quot; src=&quot;/attachments/2012-09-26-fsf.org-screenshot.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The only explanation I can think of is that the FSF are so invested in the idea
of every development being a Microsoft led conspiracy against freedom that they
can&amp;rsquo;t not spin things like this any more. In fact, anyone who does comply with
Microsofts certification requirements has already met the demands stated in the
FSF petition.&lt;/p&gt;

&lt;p&gt;There are plenty of very legitimate grievances against Microsoft, but this not 
one of them. For the time being, at least, Microsoft&amp;rsquo;s policy seems quite 
reasonable and quite responsible. &lt;/p&gt;

&lt;p&gt;Microsoft has the clout to get it&amp;rsquo;s public keys included in practially every 
firmware, and the corporate world will have no compunction about getting their
certificates signed by Microsoft. Red Hat have announced their intention to do
just that for the Fedora Linux distribution. &lt;/p&gt;

&lt;p&gt;But never in a million years will the FSF let Microsoft sign their certificates,
for ideological reasons. They have already condemned Red Hat for doing so.
The FSF&amp;rsquo;s intentions may be pure, but they&amp;rsquo;re politically very divisive. If the
whole Open Source and Free Software communities were to unite behind the FSF, 
then their keys could well be in every firmware just like Microsoft&amp;rsquo;s. But that
will never happen.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s time to consider the role of the FSF, and whether they now do more harm 
than good for the movement that they once nurtured.&lt;/p&gt;
</description>
				<published>2012-09-26 00:00:00 +0100</published>
				<link>http://twrl.github.com/2012/09/the-fsf-have-my-goat/</link>
			</item>
		
			<item>
				<title>The Processor of my Dreams</title>
				<description>&lt;p&gt;My recent forays into Operating System Development have made me more aware of 
the pros and cons of the x86 processor. It&amp;rsquo;s not all bad.&lt;/p&gt;

&lt;p&gt;It is impressive that software written for the 8086, which was released 35 years
ago, will still run without modification on the latest Intel i7 or AMD A-series.
But it&amp;rsquo;s also a burden, because as anyone who has ever tried to manipulate the
Global Descriptor Table will tell you, holding on to back-compatibility has
led to some hideously fragmented data structures and seemingly nonsense 
behaviour.&lt;/p&gt;

&lt;p&gt;Anyway, this set me to thinking about what features I would like in a processor.
In terms of what I&amp;rsquo;d like to see in a future iteration of the x86, we have:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;128-bit General Purpose registers. Bonus points if it can be initialized
with random data (for UUID generation), and if you can lock the value of the
high n-bits (for working with IPv6 addresses).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Hardware synchronisation primitives. It would be simple to add a circuit
connected to all (logical) cores which allows you to add, test, and remove
an integer from a list of active locks. In multi-chip setups you&amp;rsquo;d need some
sort of memory coherence to keep each chip in sync, but we&amp;rsquo;d be talking 
of quite small amounts of data on fast buses and independent of the main
load-store unit.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Updated configuration and mode selection mechanism. I understand why the x86
has fixed data structures and an array of registers to set it&amp;rsquo;s operating
mode and configuration, but it&amp;rsquo;s a nightmare. There are three million steps
to do anything, most processor features are controlled in fundamentally
different ways, and the BIOS/EFI/Bootloader/etc. may or may not have already
set or unset various things - including some which can&amp;rsquo;t easily be tested
for. By all means keep these things for legacy support. But why not
implement a new, simple, single configuration meachanism. I want to say 
&amp;ldquo;load a 24-byte configuration packet from this address&amp;rdquo; and have the CPU
execute my instructions. You can have variable length packets, make it
arbitrarily extensible. You can even include a query mechanism in the 
protocol and make it bidirectional. &lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now if I were designing a new CPU, there&amp;rsquo;s a few things I&amp;rsquo;d add to this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Seperate call and data stacks. Keeping track of the stack frame is fiddly,
and for low level programming unwinding exceptions is impractical, when you
have a single stack.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Structure mutation area. Why not have a 1024-bit register, into which you 
can load a large data structure? Make it size-aligned subaddressable (so 128 
bytes, or 64 words, or 32 dwords, or 16 qwords, etc). Then you can do 
mutations of that data structure, which because it&amp;rsquo;s a CPU register will be 
very fast and cheap, and flush it back out to main memory once you&amp;rsquo;re done.
For 128 bytes natural aligned it so happens there&amp;rsquo;s a very efficient coding
of all possible size/offset combinations into 1 byte too :)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There&amp;rsquo;s almost certainly more things I could add to this. Mechanisms to enforce
bounds on data structures, to resolve arbitrary identifiers to pointers, and
to fire arbitrary events (interrupts and exceptions being a hardware-defined
subset of &amp;lsquo;event&amp;rsquo;) all spring to mind. Slightly more outlandish, but the ability
to emulate CAM in main memory might be fun (and could underpin several of the
above).&lt;/p&gt;

&lt;p&gt;(Un)fortunately I know very little about CPU microarchitecture, and Verilog 
makes my head hurt, so Intel and AMD are safe from competetion. For now&amp;hellip;&lt;/p&gt;
</description>
				<published>2012-09-21 00:00:00 +0100</published>
				<link>http://twrl.github.com/2012/09/processor-of-my-dreams/</link>
			</item>
		
			<item>
				<title>Operating System Development</title>
				<description>&lt;p&gt;To amuse myself while I wait for the new term to start in a few weeks time, I&amp;rsquo;ve
turned to a very old friend - osdev.&lt;/p&gt;

&lt;p&gt;When I was a teenager I dabbled in Operatng Systems quite a lot. I had some 
great vision of how a new operating system should be, but of course I lacked
both the patience and the knowledge to actually bring it about.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m somewhat older and wiser now, so maybe I&amp;rsquo;ll get a little further than 
printing &amp;ldquo;hello world&amp;rdquo;. At the moment, I&amp;rsquo;m just trying out some ideas in a very
simple kernel or two, but I think I&amp;rsquo;ll sketch out a proper design and go for it.&lt;/p&gt;

&lt;p&gt;Meanwhile, here&amp;rsquo;s a few general osdev resources for anyone interested:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://wiki.osdev.org&quot;&gt;osdev.org wiki&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.osdever.net&quot;&gt;Bona Fide OS Developer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.nondot.org/sabre/os/articles&quot;&gt;The Operating System Resource Centre&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.acm.uiuc.edu/sigops/roll_your_own/&quot;&gt;How to Write an Operating System&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.brokenthorn.com/Resources/OSDevIndex.html&quot;&gt;BrokenThorn OS Development&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://lmgtfy.com/?q=os+development&quot;&gt;and there are many more out there&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
				<published>2012-09-12 00:00:00 +0100</published>
				<link>http://twrl.github.com/2012/09/operating-system-development/</link>
			</item>
		
			<item>
				<title>Multiple Representations</title>
				<description>&lt;p&gt;Well, I now have an arrangement which provides multiple views of the pages of 
this website. Believe me, that was difficult to achieve.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d investigated quite a few different Jekyll plugins, and when I couldn&amp;rsquo;t find
one to do what I wanted I investigated quite a few different approaches to
writing Jekyll plugins. But then I realised, I can do what I need far more
simply.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve been thinking about the relationship between resources and their
representations. I wrote recently about the difference an &lt;code&gt;/index.html&lt;/code&gt; makes.
So I just wrote another theme, because I&amp;rsquo;m using a fork of &lt;a href=&quot;https://github.com/josegonzalez/cimino&quot;&gt;Cimino&lt;/a&gt;
and themes are pretty easy, and I merge
files in each view of the site with the command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rename s/index/mobile/ `find _site -name *.html`
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;before merging the two file trees together. It&amp;rsquo;s perhaps not the most elegant 
solution, but it works surprisingly well.&lt;/p&gt;
</description>
				<published>2012-08-31 00:00:00 +0100</published>
				<link>http://twrl.github.com/2012/08/multiple-representations/</link>
			</item>
		
			<item>
				<title>httpRange-14 and the Dark Resource</title>
				<description>&lt;p&gt;In web parlance, a resource is any identifiable thing. A resource need not have a digital representation, and the representation of a resource may also be a distinct resource in it&amp;rsquo;s own right. There is a whole gamut of issues about resources, possibly the best known is &lt;a href=&quot;http://www.w3.org/2001/tag/issues.html#httpRange-14&quot;&gt;httpRange-14&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;A lot of these questions only become important when you start getting involved with Semantic Web technology. For example, is this properly described as a web page or as a blog post?&lt;/p&gt;

&lt;p&gt;I hold to the convention that &lt;code&gt;http://twrl.github.com/2012/08/httprange-14-and-the-dark-resource/&lt;/code&gt; is distinct from &lt;code&gt;http://twrl.github.com/2012/08/httprange-14-and-the-dark-resource/index.html&lt;/code&gt;. They&amp;rsquo;re related, very much so, but distinct. In particular&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@base &amp;lt;http://twrl.github.com/&amp;gt;
@prefix schema: &amp;lt;http://schema.org/&amp;gt;
@prefix dc: &amp;lt;http://purl.org/dc/terms/&amp;gt;

&amp;lt;/2012/08/httprange-14-and-the-dark-resource&amp;gt; a schema:BlogPost;
	dc:hasFormat &amp;lt;/2012/08/httprange-14-and-the-dark-resource/index.html&amp;gt;.

&amp;lt;/2012/08/httprange-14-and-the-dark-resource/index.html&amp;gt; a schema:WebPage.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;From this point of view, there are a lot of &amp;ldquo;missing&amp;rdquo; resources out there - ones which are not described. Taking the view that the abstract resource and it&amp;rsquo;s representation are distinct, people mostly seem to describe only one of the two.&lt;/p&gt;

&lt;p&gt;But why does this matter, you may say. Well, what a person wants to access is the abstract, logical resource. But what they need is it&amp;rsquo;s representation, and given the variety of media through which we can access the web - smartphones, tablets, TVs, etc - they need the right representation. Having the correct semantics makes it possible to identify the best of many possible representations, as well as allowing better indexes.&lt;/p&gt;
</description>
				<published>2012-08-29 00:00:00 +0100</published>
				<link>http://twrl.github.com/2012/08/httprange-14-and-the-dark-resource/</link>
			</item>
		
			<item>
				<title>Static Site Generators</title>
				<description>&lt;p&gt;I&amp;rsquo;m using Jekyll to maintain this site. I first started doing so because it was convenient
to serve from Github pages, but now I run Jekyll locally in order to support customisation
and plugins which I can&amp;rsquo;t have if I run it on Github.&lt;/p&gt;

&lt;p&gt;Jekyll itself is fine. There are a few things which niggle at me, but that would be true
for anything. The joy of using open source software is that you can modify and adapt your
way around anything that you don&amp;rsquo;t like.&lt;/p&gt;

&lt;p&gt;There is an argument that &lt;a href=&quot;http://www.jeremyscheff.com/2011/08/jekyll-and-other-static-site-generators-are-currently-harmful-to-the-free-open-source-software-movement/&quot;&gt;static site generators are harmful&lt;/a&gt; to FOSS. The 
reasoning is that we expect a certain level of dynamic and interactive content - 
commenting, sharing, and so forth - and by using a static generator to maintain a website 
we&amp;rsquo;re also tying ourselves in to third parties and their proprietary infrastructures. For
example, if you scroll down this page, you&amp;rsquo;ll see a Disqus comments box at the bottom.&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t particularly care about that though. I don&amp;rsquo;t share &lt;a href=&quot;http://www.gnu.org/philosophy/who-does-that-server-really-serve.html&quot;&gt;RMS&amp;rsquo; aversion to SaaS&lt;/a&gt;. But I do care about the functionality that I can build on top of the
platform that I&amp;rsquo;m using.&lt;/p&gt;

&lt;p&gt;Jekyll limits me somewhat because it&amp;rsquo;s written in Ruby, which I don&amp;rsquo;t know very well 
(having only started learning it recently) and don&amp;rsquo;t especially like (no curly brackets).
I&amp;rsquo;m sure I&amp;rsquo;ll get used to it, but for the time being I can&amp;rsquo;t easily knock something
together and play with it. I&amp;rsquo;m still at the stage where making quite simple tweaks is a
fairly involved process with lots of to-ing and fro-ing with language guides and API docs.
I may or may not stick with Jekyll in the long run.&lt;/p&gt;

&lt;p&gt;But I&amp;rsquo;ve definitely seen the light when it comes to static site generators. Static content
is easy to host and easy to serve. Yes, I would like to integrate my own dynamic elements
too, but that&amp;rsquo;s a fair way down my list of priorities. What I want is to be able to take 
my data, and churn out a website. And although there&amp;rsquo;s functionality which I can&amp;rsquo;t
implement with Jekyll, that&amp;rsquo;s as much down to my limitations as Jekyll&amp;rsquo;s.&lt;/p&gt;

&lt;p&gt;As client side development has become more and more powerful, the need for server-side
dynamics has diminished. We&amp;rsquo;ve reached a point where only a very small number of services
have to be on a server, and most of those are some kind of database endpoint or security
system. I don&amp;rsquo;t actually need PHP or Node or ASP.Net to generate my pages if I want to host
my own comments - I can do the presentation work on the client - I just need a RESTful 
JSON store with some basic anti-spamming logic.&lt;/p&gt;

&lt;p&gt;Somewhat circuitously, this brings me back to data portability and distributed social
networking. If I can have my RESTful data buckets, I can take responsibility for exposing
their content (or not). I can set aside a bucket or two for the dynamic elements of my
website. &lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s what Jekyll has shown me - I don&amp;rsquo;t need to be dynamic on the server.&lt;/p&gt;
</description>
				<published>2012-08-26 00:00:00 +0100</published>
				<link>http://twrl.github.com/2012/08/static-site-generators/</link>
			</item>
		
			<item>
				<title>Media Centre</title>
				<description>
&lt;p&gt;I had an entertaining time at the weekend setting up &lt;a href=&quot;http://xbmc.org&quot;&gt;XBMC&lt;/a&gt; on my laptop.
It runs well enough on Ubuntu, and compiling the latest source was pretty easy (the 
instructions are pretty good).&lt;/p&gt;

&lt;p&gt;I ran into a few problems. My CPU usage is a little on the high side. My laptop 
being an ageing MacBook, so it&amp;rsquo;s prone to run hot, and unnecessary CPU usage = unnecessary 
fan noise. Getting Suspend and Wake-on-Lan to work reliably was also tricky.&lt;/p&gt;

&lt;h2 id=&quot;cpu-usage&quot;&gt;CPU Usage&lt;/h2&gt;

&lt;p&gt;The first thing to do is enable 
&lt;a href=&quot;http://wiki.xbmc.org/index.php?title=Dirty_regions&quot;&gt;Dirty Regions&lt;/a&gt;. Trial and error will 
tell you which of the available algorithms gives you the best results on you hardware. For
my Macbook (which has an Intel GMA 950 graphics chipset) I found mode 2 worked best, but
YMMV.&lt;/p&gt;

&lt;p&gt;I also recommend disabling RSS feeds on the home screen, and trying a few different skins.
Aeon skins tend to be heavy CPU eaters, although I found Aeon Nox to be better than the
default Confluence skin.&lt;/p&gt;

&lt;h2 id=&quot;suspend-and-wol&quot;&gt;Suspend and WoL&lt;/h2&gt;

&lt;p&gt;I was having an issue with suspend, whether I triggered it from within XBMC or from the 
Unity panel: the computer would enter suspend and then immediately wake itself. 
It never did this if I just closed the lid and left it.&lt;/p&gt;

&lt;p&gt;The solution was to tweak a setting in grub.cfg. Find the line which sets &lt;code&gt;GRUB_CMDLINE_LINUX_DEFAULT&lt;/code&gt;
and add &lt;code&gt;usbcore.autosuspend=-1&lt;/code&gt; to it. So it might read&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet splash usbcore.autosuspend=-1&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or something similar.&lt;/p&gt;

&lt;p&gt;To enable Wake-on-LAN you need to first enable it in the BIOS, if applicable. I didn&amp;rsquo;t have
to - by some quirk of Apple&amp;rsquo;s EFI implementation it seems to be supported anyway.&lt;/p&gt;

&lt;p&gt;I installed ethtool, and enabled WoL on the NIC using the command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo ethtool -s et0 wol g
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is all documented on the &lt;a href=&quot;https://help.ubuntu.com/community/WakeOnLan&quot;&gt;Ubuntu Community Docs&lt;/a&gt;.
The only trouble is, you have to do this every time the network interface comes up.&lt;/p&gt;

&lt;p&gt;Now, there are all sorts of issues around integration of ethtool and NetworkManager, which
Ubuntu uses by default. I found that the best thing to do was to create a script in 
&lt;code&gt;/etc/NetworkManager/dispatcher.d&lt;/code&gt; to trigger ethtool. &lt;/p&gt;

&lt;p&gt;The dispatcher.d directory contains scripts which are executed every time an interface 
changes state in NetworkManager. I simply created a file called &lt;code&gt;99wol&lt;/code&gt; and put this in it.&lt;/p&gt;

&lt;div&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;directive&quot;&gt;#!/bin/sh&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;instance-variable&quot;&gt;IF&lt;/span&gt;=&lt;span class=&quot;predefined-constant&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;instance-variable&quot;&gt;STATUS&lt;/span&gt;=&lt;span class=&quot;predefined-constant&quot;&gt;$2&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;reserved&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;reserved&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;instance-variable&quot;&gt;$IF&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;eth0&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;reserved&quot;&gt;]&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;reserved&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;instance-variable&quot;&gt;$STATUS&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;up&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;reserved&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;reserved&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;&lt;/span&gt;    ethtool -s eth0 wol g
&lt;span class=&quot;line-numbers&quot;&gt; &lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;&lt;/span&gt;
&lt;span class=&quot;line-numbers&quot;&gt;&lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span class=&quot;reserved&quot;&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;There is almost certainly some more sophisticated logic one could employ, but it does the
job I need.&lt;/p&gt;
</description>
				<published>2012-08-14 00:00:00 +0100</published>
				<link>http://twrl.github.com/2012/08/XBMC/</link>
			</item>
		
			<item>
				<title>Microdata vs RDFa</title>
				<description>&lt;p&gt;To my shame, I&amp;rsquo;ve largely ignored the development of microdata until very recently. I&amp;rsquo;ve 
been aware of it going on in the background, but I&amp;rsquo;ve been far more concerned with RDFa
and JSON-LD when it comes to semantics.&lt;/p&gt;

&lt;p&gt;Google told me that they were favouring microdata for semantic markup, so I looked
into it. At first, I was rather taken by it&amp;rsquo;s simplicity. There is much less mucking about
with CURIEs and namespaces than in RDFa.&lt;/p&gt;

&lt;p&gt;Once the novelty wore off however, I started to see the cracks. Microdata is designed very
much to be accessible to designers. RDFa is a more complicated embedding of RDF into HTML,
which means it can encode more complex parts of the graph more succinctly. It also 
lacks many of the ambiguities that microdata can introduce around dereferencing terms.&lt;/p&gt;

&lt;p&gt;Which is not to say that microdata is without it&amp;rsquo;s merits - far from it. Microdata is
a simpler embedding of RDF into HTML, which means it can encode simpler parts of the RDF
graph more succinctly than RDFa can. It&amp;rsquo;s more human-writable, and somewhat simpler to 
parse. &lt;/p&gt;

&lt;p&gt;Both are equally as expressive.&lt;/p&gt;

&lt;p&gt;The new RDFa 1.1 recommendation has absorbed a lot of lessons both from it&amp;rsquo;s predecessor,
and from the development of microdata. RDFa began life as one module in the XHTML2 
development effort, and now stands apart from the development of HTML and XHTML as a 
separate-but-related entity. So there is plenty of room to revise and update RDFa as
technologies and practices change.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m going to stick with RDFa. The reason is simple - I don&amp;rsquo;t want to simply annotate a
few properties here and there, I want to converge semantic, structural and presentational
data. RDFa, which more closely reflects the underlying RDF graph, meshes more easily for
me with other ways of expressing RDF - like RDF/XML and JSON-LD.&lt;/p&gt;
</description>
				<published>2012-08-13 00:00:00 +0100</published>
				<link>http://twrl.github.com/2012/08/microdata-vs-rdfa/</link>
			</item>
		
	</channel>
</rss>